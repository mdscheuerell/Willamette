i
table(sample(xx,sample(seq(max(dat_age$sum)),1)))
class(table(sample(xx,sample(seq(max(dat_age$sum)),1))))
dim(table(sample(xx,sample(seq(max(dat_age$sum)),1))))
length(table(sample(xx,sample(seq(max(dat_age$sum)),1))))
zz <- table(sample(xx,sample(seq(max(dat_age$sum)),1)))
zz
zz <- table(sample(xx,sample(seq(max(dat_age$sum)),1)))
zz
xtabs(~zz)
xtabs(~sample(xx,sample(seq(max(dat_age$sum)),1)))
xtabs(seq(4,6)~sample(xx,sample(seq(max(dat_age$sum)),1)))
tabulate(c(2,3,5))
tabulate(c(2,3,3,5), nbins = 10)
zz
tabulate(zz)
zz=sample(xx,sample(seq(max(dat_age$sum)),1))
zz
tabulate(zz)
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum<A,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in 1:idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}
i
ss
ss <- sample(xx,sample(seq(max(dat_age$sum)),1))
ss
ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))
ss
tabulate(ss)
tabulate(ss)[age_min:age_max]
dat_age[i,1:A]
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum<A,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}
dat_age
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}
dat_age
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)
dat_age
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)
idx_NA_yrs
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}
dat_age
dat_age[idx_NA_yrs,(1:A)]
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}#
dat_age[is.na(dat_age)] <- 0
dat_age
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}#
dat_age[is.na(dat_age)] <- 0#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## replace 0's in yrs w/o any obs with NA's#
dat_age[idx_NA_yrs,(1:A)] <- NA#
## change total in yrs w/o any obs from 0 to A to help dmulti()#
dat_age[idx_NA_yrs,"sum"] <- A#
## convert class#
dat_age <- as.matrix(dat_age)#
## inspect#
dat_age
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}#
dat_age[is.na(dat_age)] <- 0#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)
dat_age
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(10,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}#
dat_age[is.na(dat_age)] <- 0#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age[,1:A],1,sum)
dat_age
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(4,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}#
dat_age[is.na(dat_age)] <- 0#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age[,1:A],1,sum)
dat_age
dat_age[idx_NA_yrs,(1:A)]
## age comp data#
dat_age <- read.csv(text = getURL(paste0(ex_url,fn_age)))#
## drop first age_min+age_skip rows; drop year col#
dat_age <- dat_age[-(1:(age_min+age_skip)),-1]#
## num of age classes#
A <- age_max-age_min+1#
## add row(s) of NA's for forecast years#
dat_age <- rbind(dat_age,matrix(0,n_fore,A,dimnames=list(n_yrs+seq(n_fore),colnames(dat_age))))#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age,1,sum)#
## row indices for any years with no obs age comp#
idx_NA_yrs <- which(dat_age$sum==0,TRUE)#
#
## impute missing age years#
age_sums <- apply(dat_age[,1:A],2,sum)#
mean_age_prop <- age_sums/sum(age_sums)#
mean_age_vec <- round(mean_age_prop*1000,0)#
if(sum(mean_age_vec)!=1000) {#
	tt <- sum(mean_age_vec)#
	ii <- which(mean_age_vec==max(mean_age_vec))#
	mean_age_vec[ii] <- mean_age_vec[ii]+1000-tt#
}#
xx <- rep(seq(age_min,age_max),mean_age_vec)#
for(i in idx_NA_yrs) {#
	ss <- sample(xx,sample(seq(4,max(dat_age$sum)),1))#
	dat_age[i,1:A] <- tabulate(ss)[age_min:age_max]#
}#
dat_age[is.na(dat_age)] <- 0#
## total num of age obs by cal yr#
dat_age[,"sum"] <- apply(dat_age[,1:A],1,sum)#
#
dat_age <- as.matrix(dat_age)#
## inspect#
dat_age
set.seed(123)#
x1 <- cumsum(rnorm(20))#
#
x2 <- cumsum(rnorm(20))#
#
plot.ts(cbind(x1,x2))
z1 <- 1#
z2 <- 0.5#
#
plot.ts(cbind(z1*x1,z2*x2))
var(x2)
var(z2*x2)
var(x2)/z2^2
var(x2)*z2^2
set.seed(123)#
#
# random walk; highly autocorrelated#
x <- cumsum(rnorm(100,0,0.1))#
#
y <- cumsum(rnorm(100,0,0.1))#
#
cor(x,y)
set.seed(123)#
#
# random walk; highly autocorrelated#
x <- cumsum(rnorm(100,0,0.1))#
#
# make y correlated with x#
y <- x + rnorm(100,0,0.1)#
#
cor(x,y)
set.seed(123)#
#
# random walk; highly autocorrelated#
x <- cumsum(rnorm(100,0,0.1))#
#
# make y correlated with x#
y <- x + rnorm(100)#
#
cor(x,y)
set.seed(123)#
#
# random walk; highly autocorrelated#
x <- cumsum(rnorm(100,0,0.1))#
#
# make y correlated with x#
y <- x + rnorm(100,0,0.5)#
#
cor(x,y)
set.seed(123)#
#
# random walk; highly autocorrelated#
x <- cumsum(rnorm(100,0,0.1))#
#
# make y correlated with x#
y <- x + rnorm(100,0,0.1)#
#
cor(x,y)
set.seed(123)#
#
# random walk; highly autocorrelated#
x <- cumsum(rnorm(100,0,0.1))#
#
# make y correlated with x#
y <- x + rnorm(100,0,0.1)#
#
# check correlation at multiple lags#
ccf(x,y)
citation()
library(dplyr)
x <- 1:50#
case_when(#
  x %% 35 == 0 ~ "fizz buzz",#
  x %% 5 == 0 ~ "fizz",#
  x %% 7 == 0 ~ "buzz",#
  TRUE ~ as.character(x)#
)
?group_indices
group_indices(mtcars, cyl)
nn <- 50#
#
xx <- ww <- rnorm(nn,0,0.1)#
#
b0 <- 2#
#
b1 <- 0.5#
#
for(t in 2:nn) {#
	xx[t] <- b0 + b1*xx[t-1] + ww[t]#
}#
#
mean(xx)
nn <- 100#
#
xx <- ww <- rnorm(nn,0,0.1)#
#
b0 <- 2#
#
b1 <- 0.5#
#
for(t in 2:nn) {#
	xx[t] <- b0 + b1*xx[t-1] + ww[t]#
}#
#
mean(xx)
nn <- 100#
#
xx <- ww <- rnorm(nn,0,0.1)#
#
b0 <- 2#
#
b1 <- 0.5#
#
for(t in 2:nn) {#
	xx[t] <- b0 + b1*xx[t-1] + ww[t]#
}#
#
plot.ts(xx)#
mean(xx)
nn <- 100#
#
x1 <- x2 <- ww <- rnorm(nn,0,0.1)#
#
b0 <- 2#
#
b1 <- 0.5#
#
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x1[t-1]-b0) + ww[t]#
}#
#
plot.ts(cbind(x1,x2))#
mean(x1)#
mean(x2)
nn <- 100#
#
x1 <- x2 <- ww <- rnorm(nn,0,0.1)#
#
b0 <- 2#
#
b1 <- 0.5#
#
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x2[t-1]-b0) + ww[t]#
}#
#
plot.ts(cbind(x1,x2))#
mean(x1)#
mean(x2)
cbind(x1,x2)
nn <- 100#
#
x1 <- x2 <- x3 <- ww <- rnorm(nn,0,0.1)#
#
b0 <- 2#
#
b1 <- 0.5#
#
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x2[t-1]-b0) + ww[t]#
	x3[t] <- x3[t-1] +b1*(b0 - x3[t-1]) + ww[t]#
}#
#
plot.ts(cbind(x1,x2,x3))#
mean(x1)#
mean(x2)#
mean(x3)
c1 <- c(rep(0,nn/2),rep(1,nn/2)
c1
c1 <- c(rep(0,nn/2),rep(1,nn/2))
c1
c2 <- c(rep(0,10),rep(1,30),rep(0,60))
c2
length(c2)
nn <- 100#
#
x1 <- x2 <- x3 <- ww <- rnorm(nn,0,0.1)#
#
b0 <- 2#
b1 <- 0.5#
#
cc <- 1#
#
c1 <- c(rep(0,nn/2),rep(1,nn/2))#
#
c2 <- c(rep(0,10),rep(3,30),rep(0,60))#
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x2[t-1]-b0) + ww[t]#
	x3[t] <- b0 + b1*(x2[t-1]-b0-cc*c1[t-1]) +cc*c1[t] + ww[t]#
}#
#
plot.ts(cbind(x1,x2,x3))#
mean(x1)#
mean(x2)#
mean(x3)
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x2[t-1]-b0) + ww[t]#
	x3[t] <- b0 + b1*(x2[t-1]-b0) +cc*c1[t] + ww[t]#
}#
#
plot.ts(cbind(x1,x2,x3))#
mean(x1)#
mean(x2)#
mean(x3)
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x2[t-1]-b0) + ww[t]#
	x3[t] <- b0 + b1*(x2[t-1]-b0) +cc*c2[t] + ww[t]#
}#
#
plot.ts(cbind(x1,x2,x3))#
mean(x1)#
mean(x2)#
mean(x3)
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x2[t-1]-b0) + ww[t]#
	x3[t] <- b0 + b1*(x2[t-1]-b0-cc*c1[t-1]) +cc*c2[t] + ww[t]#
}#
#
plot.ts(cbind(x1,x2,x3))#
mean(x1)#
mean(x2)#
mean(x3)
b0 <- 2#
b1 <- 1#
#
cc <- 1#
#
c1 <- c(rep(0,nn/2),rep(1,nn/2))#
#
c2 <- c(rep(0,10),rep(3,30),rep(0,60))#
for(t in 2:nn) {#
	x1[t] <- b0 + b1*x1[t-1] + ww[t]#
	x2[t] <- b0 + b1*(x2[t-1]-b0) + ww[t]#
	x3[t] <- b0 + b1*(x2[t-1]-b0-cc*c1[t-1]) + cc*c2[t] + ww[t]#
}#
#
plot.ts(cbind(x1,x2,x3))#
mean(x1)#
mean(x2)#
mean(x3)
ww1 <- "http://www.ncdc.noaa.gov/cag/time-series/"#
ww2 <- "global/nhem/land_ocean/p12/12/1880-2014.csv"#
Temp <- read.table(paste0(ww1,ww2), skip=3)
paste0(ww1,ww2)
ww1 <- "ftp://aftp.cmdl.noaa.gov/products/"#
ww2 <- "trends/co2/co2_mm_mlo.txt"#
CO2 <- read.csv(getURL(paste(ww1,ww2,sep="")))[,c(1,2,5)]
require(RCurl)
ww1 <- "ftp://aftp.cmdl.noaa.gov/products/"#
ww2 <- "trends/co2/co2_mm_mlo.txt"#
CO2 <- read.csv(getURL(paste(ww1,ww2,sep="")))[,c(1,2,5)]
CO2 <- read.table(getURL(paste(ww1,ww2,sep="")),skip=3)[,c(1,2,5)]
CO2 <- read.table(text=getURL(paste(ww1,ww2,sep="")),skip=3) #[,c(1,2,5)]
head(CO2)
CO2 <- read.table(text=getURL(paste(ww1,ww2,sep="")),skip=3)[,c(1,2,5)]
head(CO2)
CO2 <- read.table(text=getURL(paste(ww1,ww2,sep="")))[,c(1,2,5)]
head(CO2)
paste0(ww1,ww2)
ww1 <- "ftp://aftp.cmdl.noaa.gov/products/"#
ww2 <- "trends/co2/co2_mm_mlo.txt"#
CO2 <- read.table(text=getURL(paste0(ww1,ww2)),skip=72)[,c(1,2,5)]
head(CO2)
ww1 <- "ftp://aftp.cmdl.noaa.gov/products/"#
ww2 <- "trends/co2/co2_mm_mlo.txt"#
CO2 <- read.table(text=getURL(paste0(ww1,ww2)))[,c(1,2,5)]
head(CO2)
ww1 <- "http://www.ncdc.noaa.gov/cag/time-series/"#
ww2 <- "global/nhem/land_ocean/p12/12/1880-2014.csv"#
Temp <- read.table(getURL(paste0(ww1,ww2)))
paste0(ww1,ww2)
ww1 <- "https://www.ncdc.noaa.gov/cag/time-series/"#
ww2 <- "global/nhem/land_ocean/p12/12/1880-2014.csv"#
Temp <- read.table(getURL(paste0(ww1,ww2)))
ww1 <- "https://www.ncdc.noaa.gov/cag/time-series/"#
ww2 <- "global/nhem/land_ocean/p12/12/1880-2014.csv"#
Temp <- read.table(getURL(paste0(ww1,ww2)), skip=3)
getURL(paste0(ww1,ww2))
ww1 <- "https://www.ncdc.noaa.gov/cag/time-series/"#
ww2 <- "global/nhem/land_ocean/p12/12/1880-2014.csv"#
Temp <- read.table(paste0(ww1,ww2), skip=3)
head(Temp)
ww1 <- "https://www.ncdc.noaa.gov/cag/time-series/"#
ww2 <- "global/nhem/land_ocean/p12/12/1880-2014.csv"#
Temp <- read.table(paste0(ww1,ww2), skip=3, header=TRUE)
head(Temp)
Temp <- read.table(text=getURL(paste0(ww1,ww2)), skip=3)
head(Temp)
Temp <- read.csv(text=getURL(paste0(ww1,ww2)), skip=3)
head(Temp)
ww1 <- "ftp://aftp.cmdl.noaa.gov/products/"#
ww2 <- "trends/co2/co2_mm_mlo.txt"#
CO2 <- read.table(text=getURL(paste0(ww1,ww2)))[,c(1,2,5)]
head(CO2)
## get CO2 data from Mauna Loa observatory#
ww1 <- "ftp://aftp.cmdl.noaa.gov/products/"#
ww2 <- "trends/co2/co2_mm_mlo.txt"#
CO2 <- read.table(text=getURL(paste0(ww1,ww2)))[,c(1,2,5)]
head(CO2)
## assign better column names#
colnames(CO2) <- c("year","month","ppm")
getwd()
nn <- 30#
#
ss <- 0.1#
aa <- 500#
#
bb <- 0.7#
#
xx <- ww <- rnorm(nn,0,ss)#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
#
plot.ts(xx)
nn <- 100#
#
ss <- 0.1#
aa <- 500#
#
bb <- 0.7#
#
xx <- ww <- rnorm(nn,0,ss)#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
#
plot.ts(xx)
mean(xx)
nn <- 100#
#
ss <- 0.1#
aa <- 5#
#
bb <- 0.7#
#
xx <- ww <- rnorm(nn,0,ss)#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
#
plot.ts(xx)#
mean(xx)
aa <- 5#
#
bb <- 0.7#
#
xx <- ww <- rnorm(nn,0,ss)#
#
xx[1] <- -10#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
#
plot.ts(xx)#
mean(xx)
xx <- ww <- rnorm(nn,0,ss)#
#
xx[1] <- -1#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
par(mfrow=c(2,1))#
#
plot.ts(xx)#
#
plot(xx[-nn],xx[-1])
plot.ts(xx)#
#
plot(xx[-nn],xx[-1],type="l")
bb <- -0.7#
#
xx <- ww <- rnorm(nn,0,ss)#
#
xx[1] <- -1#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
par(mfrow=c(2,1))#
#
plot.ts(xx)#
#
plot(xx[-nn],xx[-1],type="l")
bb <- 0.7#
#
xx <- ww <- rnorm(nn,0,ss)#
#
xx[1] <- -1#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
par(mfrow=c(2,1))#
#
plot.ts(xx)#
#
plot(xx[-nn],xx[-1],type="l")
nn <- 100#
#
ss <- 0.5#
aa <- 5#
#
bb <- 0.7#
#
xx <- ww <- rnorm(nn,0,ss)#
#
xx[1] <- -1#
#
for(t in 2:nn) {#
	xx[t] <- aa + bb*x[t-1]#
}#
par(mfrow=c(2,1))#
#
plot.ts(xx)#
#
plot(xx[-nn],xx[-1],type="l")
load("/Users/mark.scheuerell/Dropbox/research/projects/Willamette/USACE/s-r analysis/modeling/Willamette_Chin_RR_covars_test.RData")
ls()
n_mods
flow_meta
data.frame(life_stage=flow_meta$life_stage,#
                       variable=flow_meta$long_name,#
                       begin=flow_meta$begin,#
                       end=flow_meta$end,#
                       WAIC=round(WAIC,1),#
                       delta_WAIC=round(WAIC-min(WAIC),1))
WAIC <- vector("numeric",n_mods)#
cc_smry <- matrix(NA,n_mods,3)#
colnames(cc_smry) <- c("lo_95%","median","up_95%")
WAIC
cc_smry
## extract log densities from JAGS objects#
for(i in 1:n_mods) {#
  ldens <- cbind(matrix(0,mcmc_samp,(age_min+age_skip)),#
                 mod_fits[[i]]$BUGSoutput$sims.list$lp_age)#
  ldens <- ldens + mod_fits[[i]]$BUGSoutput$sims.list$lp_esc#
  #ldens <- mod_fits[[i]]$BUGSoutput$sims.list$lp_esc#
  WAIC[i] <- waic(ldens)$waic#
  cc_smry[i,] <- mod_fits[[i]]$BUGSoutput$summary["cc", c("2.5%","50%","97.5%")]#
}
WAIC
cc_smry
tbl_WAIC <- data.frame(life_stage=flow_meta$life_stage,#
                       variable=flow_meta$long_name,#
                       begin=flow_meta$begin,#
                       end=flow_meta$end,#
                       WAIC=round(WAIC,1),#
                       delta_WAIC=round(WAIC-min(WAIC),1))
tbl_WAIC
0.05*0.08
0.05*0.08*100
0.05/0.95
0.05/0.95*0.08
as.Date("2017-3-14") - as.Date("2017-01-23")
set.seed(123)#
#
nn <- 5#
tt <- 120#
xx <- matrix(rnorm(nn*tt),nn,tt)#
#
bb <- diag(seq(4),nn)#
#
yy <- bb %*% xx
yy
bb
set.seed(123)#
#
nn <- 5#
tt <- 120#
xx <- matrix(rnorm(nn*tt),nn,tt)#
#
bb <- diag(seq(nn),nn)#
#
yy <- bb %*% xx
lm(yy ~ xx)
lm(t(yy) ~ t(xx))
## Re2prec#
## converts any real number to round/floor/ceiling#
Re2prec <- function(x,map="round",prec=1) {#
  ## 'map' can be round, floor, or ceiling#
  ## 'prec' is nearest value (eg, 0.1 means to nearest tenth); default 1 gives normal behavior#
  if(prec<=0) { stop("\"prec\" cannot be less than or equal to 0") }#
  do.call(map,list(x/prec))*prec#
}#
#
## over90k#
## returns the total number of days that flow exceeded 90k cfs#
over90k <- function(x) {#
  return(sum(x >= 90000))#
}#
#
## min7mean#
## returns the min of 7-day means over period#
min7mean <- function(x) {#
  return(round(min(filter(x, rep(1,7)/7, "convolution", sides=1), na.rm=TRUE),0))#
}#
#
## max7mean#
## returns the max of 7-day means over period#
max7mean <- function(x) {#
  return(round(max(filter(x, rep(1,7)/7, "convolution", sides=1), na.rm=TRUE),0))#
}#
#
## range2#
## returns the range as a scalar = max-min#
range2 <- function(x) {#
  return(diff(range(x)))#
}#
#
## DD15#
## returns the cumulative number of degree days > 15C#
DD15 <- function(x) {#
  return(sum(filter(x, rep(1,7)/7, "convolution", sides=1) >= 15, na.rm=TRUE))#
}#
#
## colVars#
## returns the column-wise variance of a matrix#
colVars <- function(a) {#
	n <- dim(a)[[1]]#
	c <- dim(a)[[2]]#
	return(.colMeans(((a - matrix(.colMeans(a, n, c),#
	                              nrow = n,#
	                              ncol = c,#
	                              byrow = TRUE)) ^ 2),#
	                 n, c) * n / (n - 1))#
}
xx <- rnorm(100)#
#
min7mean(xx)
min(xx)
plot.ts(xx)
matrix(0,nrow=10)
?cita
?citation
citation()
VO2max <- function(sex,age,height,weight,time) {#
	bmi <- 703*weight/height^2#
	vo2 <- 108.94 + 0.21*(sex=="M") - 0.84*bmi - 8.41*time + 0.34*time^2#
	return(vo2)#
}#
VO2max("M",48,72,175,7.6)
VO2max("F",48,72,175,7.6)
VO2max <- function(sex,age,height,weight,time) {#
	bmi <- 703*weight/height^2#
	vo2 <- 108.94 + 0.21*(sex=="M") - 0.84*bmi - 8.41*time + 0.34*time^2#
	return(round(vo2,1))#
}#
mds <- VO2max("M",48,72,175,7.6)
VO2max("M",48,72,175,7.6)
15.3*(185/50)
15.3*(185/60)
d12 <- 1.5#
35.97*d12 - 11.29
## Running#
VO2max("M",48,72,175,7.6)#
#
## Uth-Sorensen#
hr_max <- 185#
hr_min <- 55#
15.3*(hr_max/hr_min)#
#
## Cooper#
## miles run in 12 min#
d12 <- 1.5#
35.97*d12 - 11.29
d12 <- 1.6#
35.97*d12 - 11.29
round(35.97*d12 - 11.29,1)
round(15.3*(hr_max/hr_min),1)
d12 <- 1.8#
round(35.97*d12 - 11.29,1)
d12 <- 1.7#
round(35.97*d12 - 11.29,1)
60/8.5
8*12/60
8.1*12/60
8.5*12/60
d12 <- 1.6#
round(35.97*d12 - 11.29,1)
60/8.2
60/8
VO2max("M",48,72,175,7.5)
VO2max("M",48,72,175,7.6)
VO2max("M",48,72,175,7.5)
VO2max("M",48,72,175,7.4)
VO2max("M",48,72,175,7.3)
VO2max("M",48,72,175,7.4)
round(15.3*(hr_max/hr_min),1)
round(35.97*d12 - 11.29,1)
mean(c(45.6,51.5,46.3))
library(MARSS)
data(lakeWAplankton)
data()
head(lakeWAplanktonRaw)
devtools::install_github("eric-ward/safs-timeseries/statss")
4300*.069*.186
4300*0.186
4300*0.186/0.069
4300*0.186/0.059
4300*(0.186-0.059)
4300*(0.186-0.069)
4300*(0.059*0.186)
4300*(0.059/0.186)
4300*(0.069/0.186)
library(MARSS)
?MARSS
?residuals
install.packages("beepr")
library(beepr)
beep(1)
beep(2)
beep(3)
beep(4)
beep(5)
beep(6)
beep(7)
beep(8)
beep(9)
beep(10)
beep(11)
expand.grid(a=seq(3), b=LETTERS[1:3])
xx <- seq(100)
plot.ts(xx - xx^2)
plot.ts(-xx + xx^2)
library(RSpectra)
?eigs
dd <- data.frame(yr=seq(20),a=rpois(20,10),b=rpois(20,10),c=rpois(20,10))
dd
library(reshape2)
?melt
names(airquality) <- tolower(names(airquality))
airquality
melt(airquality, id=c("month", "day"), na.rm=TRUE)
melt(dd, id=c("yr"))
melt(dd, id=c("yr"))$value
dd
dim(dd)
dim(dd) <- c(80,1)#
dd
melt(dd[,-1])$value
dd <- read.csv("AllYears_ScenarioPreds_CovariateNum_1.csv")
dd
flows <- read.csv("AllYears_ScenarioPreds_CovariateNum_1.csv")
flw_z <- melt(scale(flows[,-1]))$values
flw_z
scale(flows[,-1])
melt(scale(flows[,-1]))
